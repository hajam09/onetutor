Feature:
* On my students, create a chat page to allow direct communication between the tutor and the student(s).
* Create a form to allow students to create a profile.
* Allow only students to rate tutors given the tutor has tutored the student.
* Create a copyright footer for the application.
* Write Cucumber tests for various Views.
* Create a two factor authentication for more security.
* Store the user's notification on the system and add it to event listner.
* Allow users to authenticate using social media account.
* On tutorprofile, other users can upvote/downvote questions.
* On tutorprofile, only the tutor can answer the question.
* For each Q&A, both the questionner and the answerer can upload photo(s).
* For each Q&A, users can truncate long comments.
* Create simple JIRA board for admin to add tasks, set status, and other info such as dates, priority.

Bugs / Fixes:
* Priority: Cannot activate email when regestering.
* On login and logout, redirect the user to their previous page if possible.
* On photo upload trim the photo to reduce size.
* On tutor profile when no Q&A exists, display a friendly message.
* Test the system with no user data and default seed data.
* Category -> Community -> Forum -> Comment
* Fixed navbar: add fixed-top to nav class in base. Add <br><br><br> above {% block content %} in base
* Obtaining the IP address for UserSession need to be done in the client login page. Set the IP in the login FORM like browser type.

Dashboard Metrics:
* DB used space - Done
* Number of inactive user (not logged in more than 30 days) - Done
* Number of members online - Done
* Number of users logged in today - Done
* Number of instances created for each models - Done
* #of tutors and #of students - Done
* Pie chart showing account email domains - Done
* Number of communites, forums and comments - Done
* Memory usage over time - Done
* CPU usage over time - Done
* Users joined in last week/month - Done

* Users account with FB, G+, Twitter, and system account
* Line graph for tasks completed from JIRA
* Line graph for no. of email sent per notification_settings
* number of file uploads in this week/this month for profile pic and QA pictures
* Number of page views and display count for each page. /tutoring/mainpage.html
* Number of AJAX requests called for each functionality  - on popover( login over 24hrs, 1 weeek, month)
* Test results for each app / each views functions
* Number of likes/dislikes made in comments
* Graph for number of daily visits
* Total number of visits
* Map showing visits from each country (to view traffic)
* Bounce rate for the website
* View website traffic for the last 7 days in a table. # of visits for each day for the last 7 days
* Number of messages sent on the chat app
* Number of chats created
* Ring chart showing % of task completed from JIRA
* No. of open tasks, closed tasks
* Table for ticket status (open, progress, done), subject, and priority (high, medium, low)
* user (pic), User, Country, payment method, activity (last login time ago), payment status (approved G, pending Y, rejected R)
* Users by location. showing country, and % of users from that country
* Count of each HTTP requests, and a total request count - on popover( login over 24hrs, 1 weeek, month)
* Device source
* Table showing online members and their country.
* Total login - on popover( login over 24hrs, 1 weeek, month)
* Total failed login - on popover( login over 24hrs, 1 weeek, month)
* Password resets - on popover( login over 24hrs, 1 weeek, month)


JIRA PLAN:
* JIRA page under dropdown.
* There will be a feature and bug ticket.
* Each ticket will have url in the format jira/ticket/OneTutor-#
* There will be a filter options: ALl, Feature and Bug
* Each ticket will have it's separate page describing the ticket in detail.
* Columns: Assigne, title, created date, status (open/progress/done/cancelled), priority (high/medium/low).
* In the ticket page show title, description, reporter story points all the details from above.